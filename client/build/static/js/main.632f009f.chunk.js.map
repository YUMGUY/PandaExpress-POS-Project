{"version":3,"sources":["actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/Login/login.js","components/Login/register.js","components/Gen/landing.js","components/Gen/logo192.png","components/Gen/NavBar.js","components/User/images/bowlnobg.png","components/User/images/pandaPlate.png","components/User/images/eggrollsnobg.png","components/User/images/drinksnobg.png","components/User/images/biggerplate.png","components/Cards/userCard.js","components/User/images/eggrolls.png","components/User/images/drinks.png","components/User/menuItem.js","components/User/menu.js","components/Cards/bagCard.js","components/User/bag.js","components/User/settings.js","components/User/images/menuRedHighlight.png","components/User/images/menuItemSelect.png","components/User/images/addToBag.png","components/User/images/languageBox.png","components/User/images/selectLanguage.png","components/User/images/saveSettings.png","components/User/images/cashierSubmit.png","components/User/images/cashierAdd.png","components/User/images/cashierEditItem.png","components/User/help.js","components/User/findStore.js","components/Cards/menuItemCard.js","components/Cards/orderItemCard.js","components/Cashier/processOrders.js","components/Cards/adjustableMenuItemCard.js","components/Manager/adjustMenu.js","components/Cards/reportItemCard.js","components/Cards/orderReportCard.js","components/Manager/reports.js","components/Manager/addMenuItem.js","components/private-routes/PrivateUserRoute.js","components/private-routes/PrivateManagerRoute.js","components/private-routes/PrivateCashierRoute.js","components/private-routes/PrivateOnlineUserRoute.js","App.js","index.js"],"names":["GET_ERRORS","USER_LOADING","SET_CURRENT_USER","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","type","payload","errors","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","loginUser","userData","dispatch","post","then","res","data","localStorage","setItem","decoded","jwt_decode","language","JSON","stringify","screenText","setCurrentUser","catch","err","response","logoutUser","removeItem","connect","props","useState","username","setUsername","password","setPassword","error","setError","history","useHistory","useEffect","push","className","Container","Form","noValidate","onSubmit","e","preventDefault","Group","Label","Control","required","id","placeholder","onChange","target","value","tabIndex","isInvalid","usernamenotfound","classnames","invalid","Feedback","autoComplete","passwordincorrect","Button","variant","to","registerUser","withRouter","fname","setfName","lname","setlName","email","setEmail","password2","setPassword2","newUser","Row","Col","name","registerEmail","registerUsername","registerPassword","registerPassword2","isLoading2","setLoading2","loggedIn","setLoggedIn","setScreenText","getItem","parse","translateText","useSpring","opacity","from","delay","lang","console","log","get","params","Object","keys","translationData","location","reload","Fragment","Spinner","animation","href","manager","setManagerNav","cashier","setCashierNav","setUserNav","role","Navbar","collapseOnSelect","expand","fluid","Brand","alt","src","logo","width","height","Toggle","Collapse","Nav","Link","onClick","UserCard","Card","Img","image","Title","style","textAlign","title","Text","text","count","setCount","dis","setDisabled","current","max","bag","body","float","item","function","marginRight","setbag","setprice","price","itemPrice","disabled","marginLeft","tempEntrees","setTempEntrees","tempSize","setTempSize","tempSides","setTempSides","tempDrinks","setTempDrinks","tempApps","setTempApps","show","setShow","isLoading","setLoading","sides","setSides","entrees","setEntrees","setTitle","drinks","setDrinks","appetizers","setAppetizers","numAllowed","setNumAllowed","entreecount","setEntreeCount","drinkcount","setDrinkCount","appcount","setAppCount","sidecount","setSideCount","entreePrice","setEntreePrice","drinkPrice","setDrinkPrice","sidePrice","setSidePrice","appPrice","setAppPrice","sizePrice","setSizePrice","setLogin","message","setMessage","total","setTotal","handleClose","openModal","names","bowl","link","plate","bigger","drinkImg","eggroll","userID","current_order_price","split","totalPrice","forEach","p","parseFloat","Alert","Modal","onHide","Header","closeButton","Body","map","obj","idx","cost","Footer","app","join","drink","entree","order","employeeID","setOrder","setTimeout","xs","md","position","bottom","padding","justifyContent","display","fontSize","bagCard","itemProps","Subtitle","getPrice","list","i","addMe","loopOrder","fullOrder_semi","fullOrder","bagItem","userid","bagEmpty","setBagEmpty","userCurrentOrder","setUserCurrentOrder","current_order","currentOrder","currentOrderPrice","k","length","temp","listOfItems","at","listOfPrices","AddItemsToBag","setLanguage","tts","setTTS","Table","striped","bordered","hover","colSpan","class","Select","alignItems","languageCodes","sort","mapLanguageOptions","status","cursor","menuRedHighlight","menuItemSelect","addToBag","languageBox","selectLanguage","saveSettings","cashierAdd","cashierEditItem","cashierSubmit","containerStyle","center","lat","lng","hasDirections","setHasDirections","directions","setDirections","originAddress","setOriginAddress","isLoaded","useJsApiLoader","googleMapsApiKey","React","setMap","onLoad","useCallback","setZoom","onUnmount","google","maps","DirectionsService","route","origin","destination","LatLng","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","mapContainerStyle","zoom","options","polylineOptions","strokeColor","strokeOpacity","strokeWeight","preserveViewport","suppressMarkers","MenuItemCard","formatter","Intl","NumberFormat","currency","margin","color","format","marginTop","borderRadius","addToOrder","OrderItemCard","removeFromOrder","sizes","setSizes","orderHTML","setOrderHTML","currentTab","setCurrentTab","tempOrder","loadOrderHTML","every","orderItem","splice","tempCard","menuData","tempSizes","item_type","sortItems","backgroundColor","paddingTop","overflow","overflowY","loadCurrentTab","AdjustableMenuItemCard","newPrice","itemStock","newStock","border","borderWidth","amount","stock","itemToRemove","ReportItemCard","detail","OrderReportCard","fontWeight","num","items","soldBy","menuItems","setMenuItems","startDate","setStartDate","endDate","setEndDate","reportToGenerate","setReportToGenerate","reportItems","setReportItems","sellsTogetherSearchItem","setSellsTogetherSearchItem","employeeFilter","setEmployeeFilter","itemsFilter","setItemsFilter","orderNumberFitler","setOrderNumberFilter","totalFilter","setTotalFilter","getSalesReport","tempReportItems","possibleIds","possibleItems","orderItems","minTotal","maxTotal","Infinity","order_number","parseInt","includes","employee_id","toString","total_price","filterItem","passesFilters","itemsWPrice","priceArr","prices","arrLength","generateReport","revenue","excessItems","percentageSold","toFixed","restockItems","searchItem","sellItems","itemString","itemList","String","key","tempHTML","ChangeReportToGenerate","nextReport","for","align","min","minDate","document","getElementById","setAttribute","maxDate","menuList","tempItem","mapMenuItems","itemName","setItemName","setItemPrice","setItemStock","itemType","setItemType","Component","component","rest","render","jwtToken","currentTime","Date","now","exp","App","exact","path","Landing","Login","Register","UserMenu","FindStore","PrivateOnlineUserRoute","UserSettings","UserBag","Help","ProcessOrders","AdjustMenu","Reports","AddMenuItem","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.632f009f.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false,\r\n};\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function errorReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/users/register\", userData)\r\n    .then((res) => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/users/login\", userData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      // console.log(res);\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      \r\n      if(decoded.language === \"English\"){\r\n        localStorage.setItem(\"currentLanguage\", \"English\");\r\n        localStorage.setItem(\"translation\", JSON.stringify(decoded.screenText));\r\n      }\r\n      \r\n\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING,\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  localStorage.removeItem(\"translation\");\r\n  localStorage.removeItem(\"currentLanguage\");\r\n\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState({});\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // console.log(props.auth);\r\n    if (props.auth.isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, props.auth, props.auth.isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    // console.log(props.errors);\r\n    setError(props.errors);\r\n  }, [props.errors]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    props.loginUser(userData);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Container>\r\n        <h2 className=\"display-2 text-center\">Login</h2>\r\n        <Form noValidate onSubmit={onSubmit}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <b>Username</b>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"username\"\r\n              required\r\n              id=\"username\"\r\n              placeholder=\"Enter username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              value={username}\r\n              tabIndex={1}\r\n              isInvalid={!!error.username || !!error.usernamenotfound}\r\n              className={classnames(\"\", {\r\n                invalid: error.username || error.usernamenotfound,\r\n              })}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {error.username}\r\n              {error.usernamenotfound}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <b>Password</b>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              autoComplete=\"true\"\r\n              placeholder=\"Enter password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              tabIndex={2}\r\n              isInvalid={!!error.password || !!error.passwordincorrect}\r\n              className={classnames(\"\", {\r\n                invalid: error.password || error.passwordincorrect,\r\n              })}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {error.password}\r\n              {error.passwordincorrect}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <p className=\"fs-5\">\r\n            Don't have an account? <Link to=\"/register\">Register here!</Link>\r\n          </p>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction Register(props) {\r\n  const [fname, setfName] = useState(\"\");\r\n  const [lname, setlName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [error, setError] = useState({});\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (props.auth.isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, props.auth, props.auth.isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    setError(props.errors);\r\n  }, [props.errors]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n      password2: password2,\r\n    };\r\n    props.registerUser(newUser, history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <Container>\r\n        <h2 className=\"display-2 text-center\">Register</h2>\r\n        <Form noValidate onSubmit={onSubmit}>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <b>First name</b>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => setfName(e.target.value)}\r\n                  required\r\n                  value={fname}\r\n                  isInvalid={error.name}\r\n                  id=\"fname\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: error.name,\r\n                  })}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {error.name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <b>Last name</b>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) => setlName(e.target.value)}\r\n                  required\r\n                  value={lname}\r\n                  isInvalid={error.name}\r\n                  id=\"lname\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: error.name,\r\n                  })}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {error.name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <b>Email Address</b>\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              isInvalid={!!error.registerEmail}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className={classnames(\"\", {\r\n                invalid: error.registerEmail,\r\n              })}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {error.registerEmail}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <b>Username</b>\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              value={username}\r\n              isInvalid={!!error.registerUsername}\r\n              id=\"username\"\r\n              type=\"text\"\r\n              className={classnames(\"\", {\r\n                invalid: error.registerUsername,\r\n              })}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {error.registerUsername}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <b>Password</b>\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              isInvalid={error.registerPassword}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: error.registerPassword,\r\n              })}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {error.registerPassword}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <b>Confirm Password</b>\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setPassword2(e.target.value)}\r\n              value={password2}\r\n              isInvalid={error.registerPassword2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: error.registerPassword2,\r\n              })}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {error.registerPassword2}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <p className=\"fs-5\">\r\n            Already have an account? <Link to=\"/login\">Login here!</Link>\r\n          </p>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import { Container, Button, Nav, Spinner } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Landing(props) {\r\n\r\n  const [isLoading2, setLoading2] = useState(true);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [screenText, setScreenText] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (props.auth.isAuthenticated) {\r\n      setLoggedIn(true);\r\n\r\n      if(localStorage.getItem(\"translation\") !== null){\r\n        setScreenText(JSON.parse(localStorage.getItem(\"translation\")))\r\n        setLoading2(false);\r\n      }else{\r\n        translateText(props.auth.user.language);\r\n      }\r\n      \r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }, [props.auth, props.auth.isAuthenticated]);\r\n\r\n  const springProps = useSpring({\r\n    to: { opacity: 1 },\r\n    from: { opacity: 0 },\r\n    delay: 100,\r\n  });\r\n\r\n  const continueAsGuest = () => {\r\n    const userData = {\r\n      username: \"guest\",\r\n      password: \"guestPassword\",\r\n    };\r\n    props.loginUser(userData);\r\n  }\r\n\r\n  const translateText = async (lang) => {\r\n    console.log(\"translating\");\r\n    axios.get(\"/translator/translateText\", {\r\n      params: {\r\n        screenText: Object.keys(props.auth.user.screenText),\r\n        language: lang,\r\n      }\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      const translationData = res.data;\r\n      console.log(translationData)\r\n      localStorage.setItem(\"currentLanguage\", lang);\r\n\r\n      localStorage.setItem(\"translation\", JSON.stringify(translationData) );\r\n      window.location.reload();\r\n      setLoading2(false);\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"Landing\">\r\n      <Container>\r\n        {!loggedIn ? (\r\n          <React.Fragment>\r\n            <br></br><br></br><br></br>\r\n            <h2 className=\"display-8 text-center\">\r\n              Please <a href=\"/login\">Log In</a> or <a href=\"/register\">Register</a>!\r\n            </h2>\r\n            <br></br><br></br>\r\n            {/* <div className=\"display-8 text-center\">\r\n              <p>Don't have an account?</p>\r\n              <Button onClick={() => continueAsGuest()}>continue as a guest</Button>\r\n            </div> */}\r\n          </React.Fragment>\r\n        ): (\r\n          <React.Fragment>\r\n            {isLoading2 ? (\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Spinner animation=\"border\" />\r\n              </div>\r\n            ):(\r\n              <React.Fragment>\r\n                <br></br><br></br><br></br>\r\n                <h2 className=\"display-8 text-center\">\r\n                  {screenText[\"Hi\"]} {props.auth.user.fname}!\r\n                </h2>\r\n              </React.Fragment>\r\n            )}\r\n          \r\n          </React.Fragment>\r\n        )}\r\n        \r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nLanding.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Landing);\r\n","export default __webpack_public_path__ + \"static/media/logo192.98addfbe.png\";","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\r\nimport logo from \"./logo192.png\";\r\n\r\nfunction NavBar(props) {\r\n    // State Management\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [manager, setManagerNav] = useState(false);\r\n    const [cashier, setCashierNav] = useState(false);\r\n    const [user, setUserNav] = useState(false);\r\n    const [screenText, setScreenText] = useState({\"Menu\": \"Menu\", \"Bag\": \"Bag\", \"Settings\":\"Settings\", \"Help\":\"Help\"});\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            setLoggedIn(true);\r\n        } else {\r\n            setLoggedIn(false);\r\n            setManagerNav(false);\r\n            setCashierNav(false);\r\n        }\r\n        if (props.auth.user.role === \"cashier\") {\r\n            setCashierNav(true);\r\n            setUserNav(false);\r\n            setManagerNav(false);\r\n        }\r\n        if (props.auth.user.role === \"manager\") {\r\n            setManagerNav(true);\r\n            setCashierNav(false);\r\n            setUserNav(false);\r\n        }\r\n        if (props.auth.user.role === \"user\"){\r\n            setUserNav(true);\r\n            setManagerNav(false);\r\n            setCashierNav(false);\r\n        }\r\n\r\n        if(localStorage.getItem(\"translation\") != null){\r\n            setScreenText(JSON.parse(localStorage.getItem(\"translation\")));\r\n        }else{\r\n            setScreenText(props.auth.user.screenText);\r\n        }        \r\n\r\n    }, [props.auth, props.auth.isAuthenticated]);\r\n\r\n    const onLogoutClick = (e) => {\r\n        e.preventDefault();\r\n        props.logoutUser();\r\n        setLoggedIn(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Navbar shadow-sm\">\r\n            <Navbar collapseOnSelect expand=\"lg\">\r\n                <Container fluid>\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src={logo}\r\n                            width=\"auto\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top mr-2\"\r\n                        />\r\n                        Panda Express POS\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                        {!cashier && !manager && !user &&\r\n                        <React.Fragment>\r\n                            {<Nav.Link href=\"/menu\">Menu</Nav.Link>}\r\n                            {<Nav.Link href=\"/findStore\">Find Store</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/settings\">Settings</Nav.Link>}\r\n                        </React.Fragment>\r\n                        }\r\n                        {user && \r\n                        <React.Fragment>\r\n                            {!loggedIn && <Nav.Link href=\"/menu\">Menu</Nav.Link>}\r\n                            {!loggedIn && <Nav.Link href=\"/findStore\">Find Store</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/menu\">{screenText[\"Menu\"]}</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/bag\">{screenText[\"Bag\"]}</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/settings\">{screenText[\"Settings\"]}</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/help\">{screenText[\"Help\"]}</Nav.Link>}\r\n                        </React.Fragment>\r\n                        }\r\n                        {cashier &&\r\n                        <React.Fragment>\r\n                            {!loggedIn && <Nav.Link href=\"/menu\">Menu</Nav.Link>}\r\n                            {!loggedIn && <Nav.Link href=\"/findStore\">Find Store</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/processOrders\">Process Orders</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/settings\">Settings</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/help\">Help</Nav.Link>}\r\n                        </React.Fragment>\r\n                        }\r\n                        {manager &&\r\n                        <React.Fragment>\r\n                            {!loggedIn && <Nav.Link href=\"/menu\">Menu</Nav.Link>}\r\n                            {!loggedIn && <Nav.Link href=\"/findStore\">Find Store</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/processOrders\">Process Orders</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/adjustMenu\">Adjust Menu</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/addMenuItem\">Add Menu Item</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/reports\">Reports</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/settings\">Settings</Nav.Link>}\r\n                            {loggedIn && <Nav.Link href=\"/help\">Help</Nav.Link>}\r\n                        </React.Fragment>\r\n                        }\r\n\r\n                            \r\n                        </Nav>\r\n                        <Nav>\r\n                            {!loggedIn && <Nav.Link href=\"/login\">Login</Nav.Link>}\r\n                            {!loggedIn && <Nav.Link href=\"/register\">Register</Nav.Link>}\r\n                            {loggedIn && <Nav.Link onClick={onLogoutClick}>Logout</Nav.Link>}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nNavBar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(NavBar);\r\n","export default __webpack_public_path__ + \"static/media/bowlnobg.fccce1b0.png\";","export default __webpack_public_path__ + \"static/media/pandaPlate.a5f60f53.png\";","export default __webpack_public_path__ + \"static/media/eggrollsnobg.200634d1.png\";","export default __webpack_public_path__ + \"static/media/drinksnobg.bd4b5e2a.png\";","export default __webpack_public_path__ + \"static/media/biggerplate.422f3541.png\";","import { Card } from \"react-bootstrap\";\r\nimport './userCardStyle.css';\r\n\r\n\r\nconst UserCard = (props) => {\r\n\r\n    return (\r\n        <Card className=\"user-card\" onClick={() => props.onClick(props.type)} >\r\n            <Card.Img variant=\"top\" src={props.image} />\r\n            <Card.Title style={{textAlign: \"center\"}}>{props.title}</Card.Title>\r\n            <Card.Text style={{textAlign: \"center\"}}>{props.text}</Card.Text>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard;\r\n","export default __webpack_public_path__ + \"static/media/eggrolls.23da1d7a.png\";","export default __webpack_public_path__ + \"static/media/drinks.54d04f0d.png\";","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner, Table, Card, Button, CardGroup, Modal } from \"react-bootstrap\";\r\nimport bowl from \"./images/bowlnobg.png\";\r\nimport plate from \"./images/pandaPlate.png\";\r\nimport eggroll from \"./images/eggrolls.png\";\r\nimport drinkImg from './images/drinks.png';\r\nimport bigger from './images/biggerplate.png';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport UserCard from '../Cards/userCard';\r\n\r\n\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction MenuItem(props) {\r\n    const [count, setCount] = useState(0);\r\n    const [dis, setDisabled] = useState(false);\r\n\r\n    const dec = () => {\r\n        if (count - 1 > -1) {\r\n\r\n            setCount(count - 1);\r\n            props.function(props.current - 1);\r\n            \r\n\r\n            \r\n        }\r\n    }\r\n    const inc = () => {\r\n        \r\n        setCount(count + 1);\r\n        props.function(props.current + 1);\r\n        setDisabled(props.current > props.max);\r\n        props.setbag([...props.bag, props.item]);\r\n        props.setprice([...props.price, props.itemPrice])\r\n    }\r\n    useEffect(() => {\r\n        setDisabled((props.current >= props.max));\r\n        console.log(props.bag);\r\n      }, [props.current]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Card body>\r\n                <div style={{float: 'left'}}>\r\n                    {props.item}\r\n                </div>\r\n                <div style={{float: 'right', width: '100px'}}>\r\n                    <Button onClick={() => dec()} style={{marginRight: '10px'}}>\r\n                        -\r\n                    </Button>\r\n                    \r\n                    {count}\r\n                    \r\n                    \r\n                    <Button onClick={() => inc()} disabled={dis} style={{marginLeft: '10px'}}>\r\n                        +\r\n                    </Button>\r\n                </div>\r\n                \r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nMenuItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MenuItem);\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner, Card, Button, CardGroup, Modal, Alert } from \"react-bootstrap\";\r\nimport bowl from \"./images/bowlnobg.png\";\r\nimport plate from \"./images/pandaPlate.png\";\r\nimport eggroll from \"./images/eggrollsnobg.png\";\r\nimport drinkImg from './images/drinksnobg.png';\r\nimport bigger from './images/biggerplate.png';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport UserCard from '../Cards/userCard';\r\nimport MenuItem from './menuItem';\r\n\r\n\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction Menu(props) {\r\n    const [tempEntrees, setTempEntrees] = useState([]);\r\n    const [tempSize, setTempSize] = useState(\"\");\r\n    const [tempSides, setTempSides] = useState([]);\r\n    const [tempDrinks, setTempDrinks] = useState([]);\r\n    const [tempApps, setTempApps] = useState([]);\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [sides, setSides] = useState([]);\r\n    const [entrees, setEntrees] = useState([]);\r\n    const [title, setTitle] = useState(\"N/A\");\r\n    const [drinks, setDrinks] = useState([]);\r\n    const [appetizers, setAppetizers] = useState([]);\r\n    \r\n    const [numAllowed, setNumAllowed] = useState(0);\r\n\r\n    // new version\r\n    const [entreecount, setEntreeCount] = useState(0);\r\n    const [drinkcount, setDrinkCount] = useState(0);\r\n    const [appcount, setAppCount] = useState(0);\r\n    const [sidecount, setSideCount] = useState(0);\r\n    const [entreePrice, setEntreePrice] = useState([]);\r\n    const [drinkPrice, setDrinkPrice] = useState([]);\r\n    const [sidePrice, setSidePrice] = useState([]);\r\n    const [appPrice, setAppPrice] = useState([]);\r\n    const [sizePrice, setSizePrice] = useState(\"\");\r\n    const [loggedIn, setLogin] = useState(false);\r\n\r\n    const [screenText, setScreenText] = useState({});\r\n\r\n    let list = [];\r\n    const [message, setMessage] = useState(\"\");\r\n    const [total, setTotal] = useState(0.0);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setNumAllowed(0);\r\n        setEntreeCount(0);\r\n        setDrinkCount(0);\r\n        setAppCount(0);\r\n        setSideCount(0);\r\n        setTempSides([]);\r\n        setTempEntrees([]);\r\n        setTempSize(\"\");\r\n        setTempDrinks([]);\r\n        setTempApps([]);\r\n        \r\n    }\r\n\r\n    const Submit = () => {\r\n        let app = (tempDrinks.join('; ') === \"\" ? \"\" : tempDrinks.join('; '))\r\n        let drink = (tempApps.join('; ') === \"\" ? \"\" : tempApps.join('; ')) \r\n        let entree = (tempSize === \"\" ? \"\" : tempSize) + (tempEntrees.join('; ') === \"\" ? \"\" : \"; \" + tempEntrees.join('; ')) + (tempSides.join('; ') === \"\" ? \"\" : \"; \" + tempSides.join('; '))\r\n        let order = (entree === \"\" ? \"\" : entree) + (app === \"\" ? \"\" : app) + (drink === \"\" ? \"\" : drink)\r\n        let price = sizePrice + (entreePrice.join('; ') === \"\" ? \"\" : \"; \" + entreePrice.join('; ')) + (sidePrice.join('; ') === \"\" ? \"\" : \"; \" + sidePrice.join('; ')) + (appPrice.join('; ') === \"\" ? \"\" : appPrice.join('; ')) + (drinkPrice.join('; ') === \"\" ? \"\" : drinkPrice.join('; '));\r\n\r\n\r\n\r\n        console.log(order);\r\n        axios.post(\"/orders/SubmitToBag\", {\r\n            params: {\r\n              order: order,\r\n              price: price,\r\n              employeeID: props.auth.user.id\r\n            }\r\n          })\r\n          .then((res) => {\r\n            setOrder([]);\r\n            window.location.reload();\r\n          })\r\n        order = \"\"; \r\n        setMessage(tempSize + \" has been added to order.\")\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 5000);\r\n        handleClose();\r\n    }\r\n\r\n    const openModal = (type) => {\r\n        \r\n        setTitle(type);\r\n        if (type === screenText[\"Bowl\"]) {\r\n            setNumAllowed(1);\r\n            setTempSize(\"Bowl\");\r\n            setSizePrice(\"7.5\");\r\n        }\r\n        else if (type === screenText[\"Plate\"]) {\r\n\r\n            setNumAllowed(2);\r\n            setTempSize(\"Plate\");\r\n            setSizePrice(\"9\");\r\n        }\r\n        else if (type === screenText[\"Bigger Plate\"]) {\r\n            setNumAllowed(3);\r\n            setTempSize(\"Bigger Plate\");\r\n            setSizePrice(\"10.5\");\r\n        }\r\n        \r\n        setShow(true);\r\n    }\r\n\r\n    const names = [\r\n        {title: screenText[\"Bowl\"], text: screenText[\"1 side & 1 entree\"], image: bowl, link: \"/mainCourse\"}, \r\n        {title: screenText[\"Plate\"], text: screenText[\"1 side & 2 entrees\"], image: plate, link: \"/mainCourse\"}, \r\n        {title: screenText[\"Bigger Plate\"], text: screenText[\"1 side & 3 entrees\"], image: bigger, link: \"/mainCourse\"},\r\n        {title: screenText[\"Drinks\"], text: screenText[\"Add a drink\"], image: drinkImg, link: \"\", type: 1},\r\n        {title: screenText[\"Appetizers\"], text: screenText[\"Start your meal with something small\"], image: eggroll, link: \"\"},\r\n    ]\r\n\r\n    useEffect(() => {\r\n\r\n        if(localStorage.getItem(\"translation\") != null){\r\n            setScreenText(JSON.parse(localStorage.getItem(\"translation\")));\r\n        }else{\r\n            if(props.auth.user.screenText){\r\n                setScreenText(props.auth.user.screenText);\r\n            }else{\r\n                setScreenText({\"Menu\":\"Menu\", \"Bowl\":\"Bowl\", \"1 side & 1 entree\":\"1 side & 1 entree\", \"Plate\":\"Plate\",\r\n                               \"1 side & 2 entrees\":\"1 side & 2 entrees\", \"Bigger Plate\":\"Bigger Plate\", \"1 side & 3 entrees\":\"1 side & 3 entrees\",\r\n                               \"Drinks\":\"Drinks\", \"Add a drink\":\"Add a drink\", \"Appetizers\":\"Appetizers\",\r\n                               \"Start your meal with something small\":\"Start your meal with something small\", \"Choose a Side\":\"Choose a Side\", \r\n                               \"Choose\":\"Choose\", \"Entrees\":\"Entrees\", \"Cancel\":\"Cancel\", \"Add to Bag\":\"Add to Bag\"});\r\n            }\r\n            \r\n        } \r\n        \r\n        axios.get(\"/menu/getSides\").then(res => {\r\n            setSides(res.data);\r\n        });\r\n        axios.get(\"/menu/getEntrees\").then(res => {\r\n            setEntrees(res.data);\r\n        });\r\n        axios.get(\"/menu/getDrinks\").then(res => {\r\n            setDrinks(res.data);\r\n        });\r\n        axios.get(\"/menu/getAppetizer\").then(res => {\r\n            setAppetizers(res.data);\r\n        })\r\n        if (props.auth.user.id > 0) {\r\n            setLogin(true);\r\n        }\r\n        else {\r\n            setLogin(false);\r\n        }\r\n        \r\n        setLoading(false);\r\n    }, [props.auth.user.id]);\r\n\r\n    useEffect(async () => {\r\n       await axios.get(\"/orders/getOrderPrice\", {params:{userID: props.auth.user.id}}).then(res => {\r\n            let price = res.data.current_order_price.split(\", \");\r\n            let totalPrice = 0;\r\n            price.forEach((p) => {\r\n                if (p != \"\") {\r\n                    totalPrice += parseFloat(p);\r\n                }\r\n            })\r\n            setTotal(totalPrice);\r\n        }) \r\n        \r\n    });\r\n\r\n    return (\r\n        <div className=\"Menu\">\r\n            \r\n            {message && (\r\n                <React.Fragment>\r\n                    <Alert className=\"text-center\" variant=\"danger\">\r\n                    {message}\r\n                    </Alert>\r\n                    <br></br>\r\n                </React.Fragment>\r\n            )}\r\n            <Container>\r\n                {\r\n                    isLoading\r\n                        ? (\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Spinner animation=\"border\" />\r\n                            </div>\r\n                        )\r\n                        : (\r\n                            <React.Fragment>\r\n                                \r\n                                <h2 className=\"display-4 text-center\">\r\n                                    {screenText[\"Menu\"]}\r\n                                </h2>\r\n                                <Modal show={show} onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                    <Modal.Title>{title}</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form>\r\n                                            \r\n                                            {numAllowed == 0 ? (\r\n                                                null\r\n                                            ) : (\r\n                                                <React.Fragment>\r\n                                                    <Form.Label>{screenText[\"Choose a Side\"]}</Form.Label>\r\n                                                    {sides.map((obj, idx) => (\r\n                                                        <MenuItem key={idx} item={obj.item} max={2} current={sidecount} function={setSideCount} setbag={setTempSides} bag={tempSides}  setprice={setSidePrice} price={sidePrice} itemPrice={obj.cost}/>\r\n                                                    ))}\r\n                                                    <Form.Label>{screenText[\"Choose\"]} {numAllowed} {screenText[\"Entrees\"]}</Form.Label>\r\n                                                    {entrees.map((obj, idx) => (\r\n                                                        <MenuItem key={idx} item={obj.item} max={numAllowed} current={entreecount} function={setEntreeCount} setbag={setTempEntrees} bag={tempEntrees} setprice={setEntreePrice} price={entreePrice} itemPrice={obj.cost}/>\r\n                                                    ))}\r\n                                                </React.Fragment>\r\n                                            )}\r\n                                            {title == screenText[\"Drinks\"] ? (\r\n                                                <>\r\n                                                    <Form.Label>{screenText[\"Choose a Drink\"]}</Form.Label>\r\n                                                    {drinks.map((obj, idx) => (\r\n                                                        <MenuItem key={idx} item={obj.item} max={999} current={drinkcount} function={setDrinkCount} setbag={setTempDrinks} bag={tempDrinks} setprice={setDrinkPrice} price={drinkPrice} itemPrice={obj.cost}/>\r\n                                                    ))}\r\n                                                </>\r\n                                            ) : (null)}\r\n                                            {title == screenText[\"Appetizers\"] ? (\r\n                                                <>\r\n                                                    <Form.Label>{screenText[\"Choose an Appetizer\"]}</Form.Label>\r\n                                                    {appetizers.map((obj, idx) => (\r\n                                                        <MenuItem key={idx} item={obj.item} max={999} current={appcount} function={setAppCount} setbag={setTempApps} bag={tempApps} setprice={setAppPrice} price={appPrice} itemPrice={obj.cost}/>\r\n                                                    ))}\r\n                                                </>\r\n                                            ) : (null)}\r\n                                            \r\n                                                                                       \r\n                                        </Form>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        {screenText[\"Cancel\"]}\r\n                                    </Button>\r\n                                    <Button disabled={!loggedIn} type=\"submit\" variant=\"primary\" onClick={Submit}>\r\n                                        {screenText[\"Add to Bag\"]}\r\n                                    </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                                <Row xs={1} md={3} className=\"g-4\">\r\n                                    {names.map((obj, idx) => (\r\n                                        <Col>\r\n                                            <UserCard key={idx} onClick={openModal} type={obj.title} title={obj.title} text={obj.text} image={obj.image} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                                <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                            </React.Fragment>\r\n                        )\r\n                }\r\n                \r\n            </Container>\r\n            <div style={{position: 'fixed', bottom: '0', width: '100%'}}>\r\n                <Card>\r\n                    <div style={{padding: '20px',}}>\r\n                        <Card.Text style={{float:'right'}}>\r\n                            <div style={{textAlign: 'center', justifyContent: 'center'}}>\r\n                                <div style={{marginRight: '25px', display: 'inline-block', fontSize: '20px'}}>\r\n                                    Total: ${total}\r\n                                </div>\r\n                                <div style={{display: 'inline-block'}}>\r\n                                    <Button href=\"/Bag\">Go to cart</Button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </Card.Text>\r\n                        \r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nMenu.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n","import axios from \"axios\";\r\nimport { useReducer } from \"react\";\r\nimport { Container, Button, Card } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport popupMenu from \"../User/menu\"\r\n\r\nfunction bagCard(itemProps) {\r\n  // this gets called every single time a bag is made\r\n  const loopOrder = () => {\r\n    const list = [];\r\n    itemProps.item.forEach((i) => {\r\n      let addMe = <Card.Text className = \"display-20 text-center\">{i}</Card.Text>\r\n      list.push(addMe);\r\n    })\r\n    return list;\r\n  }\r\n\r\n  const AddBagItem = (item) => {\r\n    // just like remove bag item function\r\n    axios.post(\"/users/addUserItem\", {\r\n      params: {\r\n        fullOrder_semi: itemProps.fullOrder,\r\n        bagItem: item,\r\n        employeeID: itemProps.userid,\r\n      }\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      console.log(\"added item\")\r\n      window.location.reload();\r\n    });\r\n  }\r\n  const removeBagItem = (item) => {\r\n    axios.post(\"/users/removeUserItem\", {\r\n      params: {\r\n        fullOrder_semi: itemProps.fullOrder,\r\n        bagItem: item,\r\n        employeeID: itemProps.userid,\r\n      }\r\n\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      console.log(\"removed item\")\r\n      window.location.reload();\r\n    });\r\n  }\r\n  const getPrice = () => {\r\n    let totalPrice = 0;\r\n    itemProps.cost.forEach((p) => {\r\n      if(p != \"\"){\r\n        totalPrice += parseFloat(p);\r\n      }\r\n    })\r\n    return totalPrice;\r\n  }\r\n\r\n  const ShowPopUpMenu = () => {\r\n    console.log(\"Edit Bag Menu Opened\")\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: '18rem' }}>\r\n        <Card.Body>\r\n          <Card.Title  className = \"display-10 text-center\">{itemProps.name}</Card.Title>\r\n          <Card.Subtitle>${getPrice()}</Card.Subtitle>\r\n\r\n          {loopOrder()}\r\n\r\n          {/* add a button to delete items */}\r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => removeBagItem(itemProps.item)}> - </Button>\r\n\r\n          {/* add a button to add the item we selected */}\r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => AddBagItem(itemProps.item)}> + </Button>\r\n\r\n          {/* add a button to edit bowl/plate/bigger plate, and other menu items*/}\r\n          <Button variant=\"secondary\" type=\"submit\" onClick={()=> ShowPopUpMenu()}> Edit </Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default bagCard;","import { Container, Button, Nav, CardGroup, Card, Spinner } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BagItemCard from \"../Cards/bagCard\";\r\n\r\n\r\nfunction Bag(props) {\r\n\r\n  const [isLoading, setLoading] = useState([]);\r\n  const [bagEmpty, setBagEmpty] = useState(false);\r\n  const [userCurrentOrder, setUserCurrentOrder] = useState([]);\r\n  const [total, setTotal] = useState(0.0);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/users/getCurrentOrder\", {\r\n      params: {\r\n        userID: props.auth.user.id\r\n      }\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      if(res.data.current_order === \"\"){\r\n        setLoading(false);\r\n        setBagEmpty(true);\r\n        return;\r\n      }\r\n      const currentOrder = res.data.current_order.split(\", \");\r\n      \r\n      const currentOrderPrice = res.data.current_order_price.split(\", \");\r\n      console.log(currentOrder);\r\n      console.log(currentOrderPrice);\r\n      const list = [];\r\n      for(let k = 0; k < currentOrder.length; k++){\r\n        const temp = {name: currentOrder[k], cost: currentOrderPrice[k]};\r\n        console.log(temp);\r\n        list.push(temp);\r\n      }\r\n      setUserCurrentOrder(list);\r\n\r\n      setLoading(false);\r\n    });\r\n\r\n  }, []);\r\n  useEffect(async () => {\r\n    await axios.get(\"/orders/getOrderPrice\", {params:{userID: props.auth.user.id}}).then(res => {\r\n         let price = res.data.current_order_price.split(\", \");\r\n         let totalPrice = 0;\r\n         price.forEach((p) => {\r\n             if (p != \"\") {\r\n                 totalPrice += parseFloat(p);\r\n             }\r\n         })\r\n         setTotal(totalPrice);\r\n     }) \r\n     \r\n });\r\n\r\n  function AddItemsToBag() {\r\n    const list = [];\r\n    //console.log(userCurrentOrder);\r\n    for(let i = 0; i < userCurrentOrder.length; ++i) {\r\n\r\n      const listOfItems = userCurrentOrder.at(i).name.split(\"; \");\r\n      const listOfPrices = userCurrentOrder.at(i).cost.split(\"; \");\r\n      //console.log(listOfItems);\r\n      // console.log(listOfPrices);\r\n      let bagItem = <BagItemCard key = {listOfItems[0]}\r\n                                  fullOrder = {userCurrentOrder.at(i).name} // passes in the name with semi colons\r\n                                  item = {listOfItems}\r\n                                  cost = {listOfPrices}\r\n                                  userid = {props.auth.user.id} // now call\r\n                                  />\r\n        \r\n      list.push(bagItem);\r\n\r\n      \r\n    }\r\n    return list;\r\n  }\r\n  \r\n  function submitBagOrder() { // ADD CHECK where user cannot submit order without having at least 1 item in the bag\r\n\r\n    if(userCurrentOrder.length == 0) {\r\n      console.log(\"Cannot submit an empty bag\");\r\n      return\r\n    }\r\n    axios.post(\"/orders/submitOrder\", {\r\n      params: {\r\n        order: userCurrentOrder,\r\n        employeeID: props.auth.user.id,\r\n      }\r\n    })\r\n    .then((res) => {\r\n      // empty bag in the website\r\n      setUserCurrentOrder([])\r\n      console.log(res.data)\r\n\r\n    })    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n  \r\n      <div className=\"Bag\">\r\n        {isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            {bagEmpty ? (\r\n              <h2 className=\"display-2 text-center\">Your Bag is Empty!</h2>\r\n            ): (\r\n              <React.Fragment>\r\n                <h2 className=\"display-2 text-center\"> Your Order </h2>\r\n\r\n              {AddItemsToBag()}\r\n              \r\n            </React.Fragment>\r\n            )}\r\n            <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n          </React.Fragment>\r\n      )\r\n    }\r\n    <div style={{position: 'fixed', bottom: '0', width: '100%'}}>\r\n                <Card>\r\n                    <div style={{padding: '20px',}}>\r\n                        <Card.Text style={{float:'right'}}>\r\n                            <div style={{textAlign: 'center', justifyContent: 'center'}}>\r\n                                <div style={{marginRight: '25px', display: 'inline-block', fontSize: '20px'}}>\r\n                                    Total: ${total}\r\n                                </div>\r\n                                <div style={{display: 'inline-block'}}>\r\n                                    <Button variant=\"primary\" type=\"submit\" onClick={() => submitBagOrder()}>Submit Order</Button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </Card.Text>\r\n                        \r\n                    </div>\r\n                </Card>\r\n            </div>\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nBag.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Bag);","import { Container, Button, Nav, CardGroup, Card, Spinner, Form, Table, Row, Col } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BagItemCard from \"../Cards/bagCard\";\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\n\r\nfunction Settings(props) {\r\n\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isLoading2, setLoading2] = useState(true);\r\n  const [language, setLanguage] = useState(\"English\");\r\n  const [tts, setTTS] = useState(false);\r\n  const [screenText, setScreenText] = useState({});\r\n\r\n  useEffect(() => {\r\n    setScreenText(props.auth.user.screenText);\r\n    axios.get(\"/users/getUserSettings\", {\r\n      params: {\r\n        userID: props.auth.user.id\r\n      }\r\n    }).then((res) => {\r\n      if(res.data.language){\r\n        setLanguage(res.data.language);\r\n        setTTS(res.data.tts);\r\n      }\r\n      setLoading(false);\r\n      if(localStorage.getItem(\"translation\") != null && localStorage.getItem(\"currentLanguage\") != null && localStorage.getItem(\"currentLanguage\") === res.data.language){\r\n        setScreenText(JSON.parse(localStorage.getItem(\"translation\")));\r\n        setLoading2(false);\r\n      }\r\n      else{\r\n        translateText(res.data.language);\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n  }, []);\r\n\r\n  const saveChanges = () => {\r\n    axios.post(\"/users/saveSettings\", {\r\n      params: {\r\n        userID: props.auth.user.id,\r\n        language: language,\r\n        tts: tts,\r\n      }\r\n    })\r\n    .then((res) => {\r\n      if(res.status === 200){\r\n        window.location.reload();\r\n      }\r\n    })\r\n  }\r\n\r\n  const translateText = async (lang) => {\r\n    console.log(\"translating\");\r\n    axios.get(\"/translator/translateText\", {\r\n      params: {\r\n        screenText: Object.keys(props.auth.user.screenText),\r\n        language: lang,\r\n      }\r\n    }).then((res) => {\r\n      const translationData = res.data;\r\n\r\n      localStorage.setItem(\"currentLanguage\", lang);\r\n      localStorage.setItem(\"translation\", JSON.stringify(translationData) );\r\n      setScreenText(res.data);\r\n      window.location.reload();\r\n      setLoading2(false);\r\n    })\r\n    \r\n  }\r\n\r\n  const mapLanguageOptions = () => {\r\n    const languageCodes = ['Afrikaans', 'Shqip', 'عربي', 'Հայերէն', 'آذربایجان دیلی', 'Euskara', 'Беларуская', 'Български', 'Català', '中文简体', '中文繁體', 'Hrvatski', 'Čeština', 'Dansk', 'Nederlands', 'English', 'Eesti keel', 'Filipino', 'Suomi', 'Français', 'Galego', 'ქართული', 'Deutsch', 'Ελληνικά', 'Kreyòl ayisyen', 'עברית', 'हिन्दी', 'Magyar', 'Íslenska', 'Bahasa Indonesia', 'Gaeilge', 'Italiano', '日本語', '한국어', 'Latviešu', 'Lietuvių kalba', 'Македонски', 'Malay', 'Malti', 'Norsk', 'فارسی', 'Polski', 'Português', 'Română', 'Русский', 'Српски', 'Slovenčina', 'Slovensko', 'Español', 'Kiswahili', 'Svenska', 'ไทย', 'Türkçe', 'Українська', 'اردو', 'Tiếng Việt', 'Cymraeg', 'ייִדיש'].sort();\r\n    const list = [];\r\n    languageCodes.forEach((lang) => {\r\n      let temp = <option>{lang}</option>\r\n      list.push(temp);\r\n    })\r\n    return list;\r\n  }\r\n\r\n  return (\r\n  \r\n      <div className=\"FindStore\">\r\n        {isLoading || isLoading2 ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            \r\n            <Table striped bordered hover className=\"text-center\">\r\n              <thead>\r\n                <td colSpan={2}><h2 className=\"display-3 text-center\">{screenText[\"My Settings\"]}</h2></td>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                <td class=\"col-md-4\"><p>{screenText[\"Language\"]}</p></td>\r\n                <td class=\"col-md-4\" className=\"align-items-center\">\r\n                  <Form.Group className=\"mb-2\">\r\n                    <Form.Select\r\n                      aria-label=\"Language\"\r\n                      value={language}\r\n                      width=\"300\"\r\n                      onChange={(e) => {\r\n                      setLanguage(e.target.value);\r\n                      }}\r\n                      style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                      >\r\n                        {mapLanguageOptions()}\r\n                        {/* <option>English</option>\r\n                        <option>Spanish</option>\r\n                        <option>Dutch</option> */}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </td>\r\n                </tr>\r\n                {/* <tr>\r\n                  <td class=\"col-md-4\"><p>{screenText[\"Text-to-Speech\"]}</p></td>\r\n                  <td class=\"col-md-4\">\r\n                      <BootstrapSwitchButton\r\n                          checked={tts}\r\n                          onlabel={screenText[\"Disable Text-to-Speech\"]}\r\n                          offlabel={screenText[\"Enable Text-to-Speech\"]}\r\n                          width=\"300\"\r\n                          onChange={() => setTTS(!tts)}\r\n                      />\r\n                  </td>\r\n                </tr> */}\r\n              </tbody>\r\n            </Table>\r\n            <br></br><br></br><br></br><br></br>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Button className=\"btn-lg btn-success\" onClick={() => saveChanges()}>{screenText[\"Save Changes!\"]}</Button>\r\n            </div>\r\n            <br></br>\r\n          </React.Fragment>\r\n      )\r\n    }\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nSettings.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Settings);","export default __webpack_public_path__ + \"static/media/menuRedHighlight.995a21c8.png\";","export default __webpack_public_path__ + \"static/media/menuItemSelect.e8d40b16.png\";","export default __webpack_public_path__ + \"static/media/addToBag.ca137c37.png\";","export default __webpack_public_path__ + \"static/media/languageBox.f335eadb.png\";","export default __webpack_public_path__ + \"static/media/selectLanguage.e6f88968.png\";","export default __webpack_public_path__ + \"static/media/saveSettings.8262bb60.png\";","export default __webpack_public_path__ + \"static/media/cashierSubmit.1096a58e.png\";","export default __webpack_public_path__ + \"static/media/cashierAdd.d31e3069.png\";","export default __webpack_public_path__ + \"static/media/cashierEditItem.d256aa90.png\";","import { Container, Button, Nav, CardGroup, Card, Spinner, Alert, Table } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport menuRedHighlight from \"./images/menuRedHighlight.png\";\r\nimport menuItemSelect from \"./images/menuItemSelect.png\";\r\nimport addToBag from \"./images/addToBag.png\"\r\nimport languageBox from \"./images/languageBox.png\";\r\nimport selectLanguage from \"./images/selectLanguage.png\";\r\nimport saveSettings from \"./images/saveSettings.png\";\r\n\r\nimport cashierSubmit from \"./images/cashierSubmit.png\";\r\nimport cashierAdd from \"./images/cashierAdd.png\";\r\nimport cashierEditItem from \"./images/cashierEditItem.png\";\r\n\r\nimport \"./tableStyle.css\";\r\n\r\nfunction Help(props) {\r\n\r\n  const [isLoading, setLoading] = useState([]);\r\n  const [message, setMessage] = useState();\r\n\r\n  useEffect(() => {\r\n\r\n    setLoading(false);\r\n\r\n  }, []);\r\n\r\n  return (\r\n  \r\n      <div className=\"Help\">\r\n        {isLoading ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <h2 className=\"display-3 text-center\"> Help </h2>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <p><i>Click on an item to learn more about that topic!</i></p>\r\n            </div>\r\n            <br></br>\r\n\r\n            {message && (\r\n              <React.Fragment>\r\n                <Alert className=\"text-center\" variant=\"danger\">\r\n                  {message}\r\n                </Alert>\r\n                <br></br>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {props.auth.user.role === \"online-user\" && \r\n                <React.Fragment>\r\n                    \r\n\r\n                </React.Fragment>\r\n            }\r\n\r\n            {props.auth.user.role === \"user\" && \r\n                <React.Fragment>\r\n                    <Table bordered hover className=\"text-center\">\r\n                        <tbody>\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow0\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Make an Order ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow0\">\r\n                                    <br></br>\r\n                                        <p>1. Click the box for whatever item you wish to add to your bag.</p>\r\n                                        <p>2. Select item details and click add to bag.</p>\r\n                                        <p>3. Click 'Bag' in the navigation menu up top.</p>\r\n                                        <p>4. Confirm your order and click 'Submit Order'.</p>\r\n                                        <p>5. Wait by the pickup counter for your food.</p>\r\n\r\n                                    <br></br>\r\n                                </div></td>\r\n                            </tr>\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow1\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Add Items to Your Bag ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow1\">\r\n                                    <br></br>\r\n                                        <p>1. Click the box for whatever item you wish to add to your bag. (Boxes highlighted in red)</p>\r\n                                        <img src={menuRedHighlight} width=\"500px\"></img>\r\n                                        <br></br><br></br>\r\n                                        <p>2. Select desired options from the menu.</p>\r\n                                        <img src={menuItemSelect} width=\"300px\"></img>\r\n                                        <br></br><br></br>\r\n                                        <p>3. Click 'Add to Bag'</p>\r\n                                        <img src={addToBag} width=\"500px\"></img>\r\n                                        <br></br><br></br>\r\n                                    <br></br>\r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow2\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Edit an Order ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow2\">\r\n                                    \r\n                                    Sup\r\n                                    \r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow3\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">Submitting an Order ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow3\">\r\n                                    \r\n                                    Sup\r\n                                    \r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow4\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">Changing your Settings ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow4\">\r\n                                    <p>1. Navigate to the 'Settings' tab in the navigation above.</p>\r\n                                    <p>As of now, we only support language changes.</p>\r\n                                    <p>2. Select the language drop down box and pick your desired language.</p>\r\n                                    <img src={languageBox} width=\"800px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <img src={selectLanguage} width=\"500px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <img src={saveSettings} width=\"500px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <p>3. Wait for new language to load.</p>\r\n                                    <br></br><br></br>\r\n                                </div></td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </React.Fragment>\r\n            }\r\n\r\n            {props.auth.user.role === \"cashier\" && \r\n                <React.Fragment>\r\n                    <Table bordered hover className=\"text-center\">\r\n                        <tbody>\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow1\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">What to do when a customer approaches ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow1\">\r\n                                    <p>1. Greet the customer and look at their meal.</p>   \r\n                                    <p>2. Enter in click buttons to add an item to their receipt.</p>\r\n                                    <img src={cashierAdd}></img>\r\n                                    <br></br><br></br>\r\n                                    <p>3. Tell the customer their total and ask for their payment.</p>\r\n                                    <p>4. Process the customer's payment and give them their meal.</p>\r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow2\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Edit an Order ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow2\">\r\n                                    <p>1. If you added an item by mistake or the customer changed their mind, select the 'X' next to the item.</p>\r\n                                    <img src={cashierEditItem}></img>\r\n                                    <br></br><br></br>\r\n                                    <p>2. If needed, add another item to the receipt before continuing.</p>\r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow3\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">Submitting an Order ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow3\">\r\n                                    <p>1. Confirm that the receipt is correct with the customer.</p>\r\n                                    <p>2. Select 'Submit Order' below the items in the receipt.</p>\r\n                                    <img src={cashierSubmit}></img>\r\n                                    <br></br><br></br>\r\n                                    <p>3. Give the customer their food and say you salutation.</p>\r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow4\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">Changing your Settings ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow4\">\r\n                                    <p>1. Navigate to the 'Settings' tab in the navigation above.</p>\r\n                                    <p>As of now, we only support language changes.</p>\r\n                                    <p>2. Select the language drop down box and pick your desired language.</p>\r\n                                    <img src={languageBox} width=\"800px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <img src={selectLanguage} width=\"500px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <img src={saveSettings} width=\"500px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <p>3. Wait for new language to load.</p>\r\n                                    <br></br><br></br>\r\n                                </div></td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </Table>\r\n\r\n                </React.Fragment>\r\n            }\r\n\r\n            {props.auth.user.role === \"manager\" && \r\n                <React.Fragment>\r\n                    <Table bordered hover className=\"text-center\">\r\n                        <tbody>\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow1\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Process Orders ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow1\">\r\n                                    <p>1. Greet the customer and look at their meal.</p>   \r\n                                    <p>2. Enter in click buttons to add an item to their receipt.</p>\r\n                                    <img src={cashierAdd}></img>\r\n                                    <br></br><br></br>\r\n                                    <p>3. Confirm that the receipt is correct with the customer.</p>\r\n                                    <p>4. Select 'Submit Order' below the items in the receipt.</p>\r\n                                    <img src={cashierSubmit}></img>\r\n                                    <br></br><br></br>\r\n                                    <p>5. Give the customer their food and say you salutation.</p>\r\n\r\n                                    <br></br>\r\n                                    <p><b>If you need to edit an item:</b></p>\r\n                                    <p>1. If you added an item by mistake or the customer changed their mind, select the 'X' next to the item.</p>\r\n                                    <img src={cashierEditItem}></img>\r\n                                    <br></br><br></br>\r\n                                    <p>2. If needed, add another item to the receipt before continuing.</p>\r\n                                </div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow2\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Edit Menu Items ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow2\">Sup</div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow3\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Add New Menu Items ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow3\">Sup</div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow4\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Delete Menu Items ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow4\">Sup</div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow5\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">How to Generate Reports ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow5\">Sup</div></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"table-secondary\" data-toggle=\"collapse\" data-target=\".commentRow6\" style={{cursor:'pointer'}}>\r\n                                <td class=\"col-md-2\">Changing your Settings ⬎</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"hiddenRow\"><div className=\"collapse commentRow6\">\r\n                                    <p>1. Navigate to the 'Settings' tab in the navigation above.</p>\r\n                                    <p>As of now, we only support language changes.</p>\r\n                                    <p>2. Select the language drop down box and pick your desired language.</p>\r\n                                    <img src={languageBox} width=\"800px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <img src={selectLanguage} width=\"500px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <img src={saveSettings} width=\"500px\"></img>\r\n                                    <br></br><br></br>\r\n                                    <p>3. Wait for new language to load.</p>\r\n                                    <br></br><br></br>\r\n                                </div></td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </Table>\r\n\r\n                </React.Fragment>\r\n            }\r\n\r\n\r\n            \r\n            <br></br><br></br><br></br><br></br>\r\n          </React.Fragment>\r\n      )\r\n    }\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nHelp.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Help);","import { Container, Button, Nav, CardGroup, Card, Spinner, Alert } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BagItemCard from \"../Cards/bagCard\";\r\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer, DirectionsService, Marker } from '@react-google-maps/api';\r\n\r\n// AIzaSyAud1v1zLrlkpIkl6_Q7H_WkLsXRf1tZtg\r\nconst containerStyle = {\r\n  width: '800px',\r\n  height: '600px'\r\n};\r\n\r\nconst center = {\r\n  lat: 30.612316337476013,\r\n  lng: -96.34151050347089\r\n};\r\n\r\nfunction FindStore(props) {\r\n\r\n  const [isLoading, setLoading] = useState([]);\r\n  const [hasDirections, setHasDirections] = useState(false);\r\n  const [directions, setDirections] = useState({});\r\n  const [originAddress, setOriginAddress] = useState('');\r\n  const [message, setMessage] = useState();\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyAud1v1zLrlkpIkl6_Q7H_WkLsXRf1tZtg\"\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  useEffect(() => {\r\n    \r\n    setLoading(false);\r\n\r\n  }, []);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\r\n    // const bounds = new window.google.maps.LatLngBounds(center);\r\n    // map.fitBounds(bounds);\r\n    map.setZoom(15);\r\n\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  const calcRoute = () => {\r\n\r\n    setHasDirections(true);\r\n    const ds = new google.maps.DirectionsService();\r\n    ds.route(\r\n      {\r\n        origin: originAddress,\r\n        destination: new google.maps.LatLng(30.612316337476013, -96.34151050347089),\r\n        travelMode: window.google.maps.TravelMode.DRIVING,\r\n      },\r\n      (result, status) => {\r\n        // console.log(\"status\", status);\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n          console.log(result);\r\n          setDirections(result);\r\n          setHasDirections(true);\r\n        } else {\r\n          // console.error(`error fetching directions ${result}`);\r\n          setMessage(\"Invalid origin address, please be more specific\")\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 5000);\r\n          \r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return (\r\n  \r\n      <div className=\"FindStore\">\r\n        {isLoading || !isLoaded ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <h2 className=\"display-3 text-center\"> Find my Store </h2>\r\n            <br></br>\r\n            {message && (\r\n              <React.Fragment>\r\n                <Alert className=\"text-center\" variant=\"danger\">\r\n                  {message}\r\n                </Alert>\r\n                <br></br>\r\n              </React.Fragment>\r\n            )}\r\n            <div className=\"d-flex justify-content-center\">\r\n              <p><i>Enter your address to map to our store.</i></p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <input placeholder=\"1234 snow dr, tx\" onChange={(e) => {setOriginAddress(e.target.value)}}></input>\r\n              <Button onClick={() => calcRoute()}>Find Route!</Button>\r\n            </div>\r\n            <br></br><br></br>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={15}\r\n                onLoad={onLoad}\r\n                onUnmount={onUnmount}\r\n              >\r\n                <Marker position={center}/>\r\n                {hasDirections && \r\n                  <DirectionsRenderer\r\n                    directions={directions}\r\n                    options={{\r\n                      polylineOptions: {\r\n                        strokeColor: '#ff00dd',\r\n                        strokeOpacity: 0.8,\r\n                        strokeWeight: 6,\r\n                      },\r\n                      preserveViewport: true,\r\n                      suppressMarkers: true,\r\n                    }}\r\n                  />\r\n                }\r\n                <></>\r\n              </GoogleMap>\r\n            </div>\r\n            <br></br><br></br>\r\n            <div className=\"text-center\">\r\n                <p>Panda Express, College Station is located at:</p>\r\n                <p>275 Joe Routt Blvd,</p>\r\n                <p>College Station, TX 77840</p>\r\n            </div>\r\n            <br></br><br></br><br></br><br></br>\r\n          </React.Fragment>\r\n      )\r\n    }\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nFindStore.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FindStore);","import { Container, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction MenuItemCard(itemProps) {\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n\r\n  return (\r\n    <Card style={{ width: 31+\"%\", margin: 1+\"%\", textAlign: \"center\", float: \"left\", color: \"#000000\"}}>\r\n        <Card.Body>\r\n          <Card.Title style={{height: 3+\"em\"}}>{itemProps.name}</Card.Title>\r\n          <Card.Subtitle style={{}}>{formatter.format(itemProps.cost)}</Card.Subtitle>\r\n          <Button style={{width: 100+\"%\", float: \"left\", marginTop: 5+\"%\", borderRadius: 7+\"px\"}} variant=\"dark\" onClick={() => itemProps.addToOrder(itemProps)}>+</Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MenuItemCard;","import { Container, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction OrderItemCard(itemProps) {\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n\r\n  return (\r\n    <Card style={{width: 90+\"%\", margin: 3+\"%\", color: \"#000000\"}}>\r\n        <Card.Body>\r\n          <div style={{width: 50+\"%\", float: \"left\", margin: 1+\"%\", borderRadius: 7+\"px\", textAlign: \"left\"}}>\r\n            <Card.Title style={{}}>{itemProps.name}</Card.Title>\r\n            <Card.Subtitle style={{}}>{formatter.format(itemProps.cost)}</Card.Subtitle>\r\n          </div>\r\n          <Button style={{width: 45+\"%\", float: \"right\", margin: 1+\"%\", borderRadius: 7+\"px\"}} variant=\"danger\" onClick={() => itemProps.removeFromOrder(itemProps)}>X</Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default OrderItemCard;","import { Container, Button, Nav, FormFloating, Spinner } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MenuItemCard from \"../Cards/menuItemCard\";\r\nimport OrderItemCard from \"../Cards/orderItemCard\";\r\n\r\n/**\r\n * This function creates a page for cashiers and managers to use to process orders in real time.\r\n * \r\n * @param {Object} props the decoded user payload\r\n * @returns {Object} The html for the react component\r\n * \r\n */\r\nfunction Cashier(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [sizes, setSizes] = useState([]);\r\n  const [entrees, setEntrees] = useState([]);\r\n  const [sides, setSides] = useState([]);\r\n  const [appetizers, setAppetizers] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n  const [order, setOrder] = useState([]);\r\n  const [orderHTML, setOrderHTML] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [currentTab, setCurrentTab] = useState(\"Plate Sizes\");\r\n  const employeeID = props.auth.user.id;\r\n\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/menu/getAllMenuItems\")\r\n    .then((res) => {\r\n      sortItems(res.data);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {console.log(err)});\r\n  }, []);\r\n\r\n  const springProps = useSpring({\r\n    to: { opacity: 1 },\r\n    from: { opacity: 0 },\r\n    delay: 100,\r\n  });\r\n\r\n  function addToOrder(item) {\r\n    let tempOrder = order;\r\n\r\n    tempOrder.push(item);\r\n    setOrder(tempOrder);\r\n    loadOrderHTML(order);\r\n    console.log(order);\r\n  }\r\n\r\n  function removeFromOrder(item) {\r\n    let tempOrder = order;\r\n\r\n    tempOrder.every((orderItem, i) => {\r\n      if (orderItem.name == item.name) {\r\n        tempOrder.splice(i, 1);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    setOrder(tempOrder);\r\n    loadOrderHTML(order);\r\n    console.log(order);\r\n  }\r\n\r\n  function sortItems(menuData) {\r\n    const tempEntrees = [];\r\n    const tempSizes = [];\r\n    const tempSides = [];\r\n    const tempDrinks = [];\r\n    const tempApps = [];\r\n\r\n    menuData.forEach((item) => {\r\n      let tempCard = <MenuItemCard key={item.item}\r\n                        name={item.item}\r\n                        cost={item.cost}\r\n                        addToOrder={addToOrder}\r\n                        removeFromOrder={removeFromOrder}\r\n                      />\r\n\r\n      if (item.item_type == \"entree\") {tempEntrees.push(tempCard);}\r\n      else if (item.item_type == \"size\") {tempSizes.push(tempCard);}\r\n      else if (item.item_type == \"side\") {tempSides.push(tempCard);}\r\n      else if (item.item_type == \"drink\") {tempDrinks.push(tempCard);}\r\n      else if (item.item_type == \"appetizer\") {tempApps.push(tempCard);}\r\n    })\r\n    \r\n    setEntrees(tempEntrees);\r\n    setDrinks(tempDrinks);\r\n    setSizes(tempSizes);\r\n    setSides(tempSides);\r\n    setAppetizers(tempApps);\r\n  }\r\n\r\n  function loadOrderHTML(order) {\r\n    let total = 0\r\n    let orderHTML = []\r\n\r\n    order.forEach((item) => {\r\n      let tempCard = <OrderItemCard\r\n                      name={item.name}\r\n                      cost={item.cost}\r\n                      removeFromOrder={removeFromOrder}\r\n                    />\r\n      total += item.cost;\r\n      orderHTML.push(tempCard);\r\n    })\r\n\r\n    setTotal(total);\r\n    setOrderHTML(orderHTML);\r\n  }\r\n\r\n  function loadCurrentTab(currentTab) {\r\n    if (currentTab == \"Plate Sizes\") {return sizes;}\r\n    else if (currentTab == \"Sides\") {return sides;}\r\n    else if (currentTab == \"Proteins\") {return entrees;}\r\n    else if (currentTab == \"Appetizers\") {return appetizers;}\r\n    else if (currentTab == \"Drinks\") {return drinks;}\r\n  }\r\n\r\n  function submitOrder() {\r\n    console.log(order);\r\n    axios.post(\"/orders/submitOrderCashier\", {\r\n      params: {\r\n        order: order,\r\n        employeeID: employeeID\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setOrder([]);\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Cashier\">\r\n      {loading ? (\r\n        <React.Fragment>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Spinner animation=\"border\" />\r\n            </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <br></br>\r\n          <h2 className=\"display-8 text-center\">Process Orders</h2>\r\n          <div style={{width: 75 + \"%\", height: 75+\"vh\", float: \"left\", color: \"#FFFFFF\", textAlign: \"center\", backgroundColor: \"#C02827\", borderRadius: 7+\"px\", margin: 1+\"%\"}}>\r\n            <div style={{width: 20 + \"%\", float: \"left\", paddingTop: 7+\"%\" }}>\r\n              <Button style={{width: 70+\"%\", height: 10+\"vh\", borderRadius: 7+\"px\", margin: 2+\"px\"}} variant=\"dark\" onClick={() => {setCurrentTab(\"Plate Sizes\")}}>Plate Sizes</Button>\r\n              <Button style={{width: 70+\"%\", height: 10+\"vh\", borderRadius: 7+\"px\", margin: 2+\"px\"}} variant=\"dark\" onClick={() => {setCurrentTab(\"Sides\")}}>Sides</Button>\r\n              <Button style={{width: 70+\"%\", height: 10+\"vh\", borderRadius: 7+\"px\", margin: 2+\"px\"}} variant=\"dark\" onClick={() => {setCurrentTab(\"Proteins\")}}>Proteins</Button>\r\n              <Button style={{width: 70+\"%\", height: 10+\"vh\", borderRadius: 7+\"px\", margin: 2+\"px\"}} variant=\"dark\" onClick={() => {setCurrentTab(\"Appetizers\")}}>Appetizers</Button>\r\n              <Button style={{width: 70+\"%\", height: 10+\"vh\", borderRadius: 7+\"px\", margin: 2+\"px\"}} variant=\"dark\" onClick={() => {setCurrentTab(\"Drinks\")}}>Drinks</Button>\r\n            </div>\r\n            <div style={{width: 75 + \"%\", float: \"left\", textAlign: \"center\", backgroundColor: \"#C02827\", borderRadius: 7+\"px\", margin: 1+\"%\", overflow: \"auto\"}}>\r\n              <h4 style={{paddingTop: 10+\"px\", color: \"#FFFFFF\", margin: 5+\"px\"}}className=\"text-center\">{currentTab}:</h4>\r\n              <div style={{height: 60+\"vh\" , overflowY: \"scroll\"}}>{loadCurrentTab(currentTab)}</div>\r\n            </div>\r\n          </div>\r\n          <div style={{width: 21 + \"%\", height: 75+\"vh\", float: \"right\", color: \"#FFFFFF\", backgroundColor: \"#000000\", borderRadius: 7+\"px\", margin: 1+\"%\"}}>\r\n            <h4 style={{paddingTop: 10+\"px\"}} className=\"text-center\">Current Order:</h4>\r\n            <br></br>\r\n            <div style={{height: 50+\"vh\", overflowY: \"scroll\", margin: 1+\"%\"}}>{orderHTML}</div>\r\n            <br></br>\r\n            <div>\r\n              <h5 style={{float: \"left\", textAlign: \"left\", margin: 10+\"px\"}}>Total: {formatter.format(total)}</h5>\r\n              <Button style={{float: \"right\", margin: 10+\"px\"}} variant=\"light\" onClick={() => {submitOrder()}}>Submit Order</Button>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCashier.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Cashier);\r\n","import { Container, Button, Card } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AdjustableMenuItemCard(props) {\r\n\r\n  const [itemPrice, newPrice] = useState(0);\r\n  const [itemStock, newStock] = useState(0);\r\n\r\n  const updatePrice = () => {\r\n    axios.post(\"/menu/updatePrice\", {\r\n      params: {\r\n        price: itemPrice,\r\n        name: props.name,\r\n      }\r\n    })\r\n    .then((res) => {\r\n      // console.log(res.data)\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n  const updateStock = () => {\r\n    axios.post(\"/menu/updateStock\", {\r\n      params: {\r\n        stock: itemStock,\r\n        name: props.name,\r\n      }\r\n    })\r\n    .then((res) => {\r\n      // console.log(res.data)\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n  const removeItem = () => {\r\n    axios.post(\"/menu/removeItem\", {\r\n      params: {\r\n        itemToRemove: props.name\r\n      }\r\n    })\r\n    .then((res) => {\r\n      window.location.reload();\r\n    })\r\n  }\r\n\r\n    return (\r\n  <div className=\"AdjustableMenuItemCard\">\r\n      <Container>\r\n        <Card\r\n          border={\"success\"}\r\n          style={{ borderWidth: \"5px\" }}\r\n          className=\"p-2 m-2 rounded shadow\"\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>{props.name}</Card.Title>\r\n            <br></br>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">$</span>\r\n              </div>\r\n              <input type=\"text\" class=\"form-control\" placeholder={props.cost} id=\"cost\" aria-describedby=\"basic-addon1\" onChange={(e) => newPrice(e.target.value)}>\r\n              </input>\r\n              <div class=\"input-group-append\">\r\n                <Button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={() => updatePrice()}>Update</Button>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">Amount</span>\r\n                </div>\r\n              <input type=\"text\" class=\"form-control\" placeholder={props.amount} aria-describedby=\"basic-addon1\" onChange={(e) => newStock(e.target.value)}>\r\n              </input>\r\n              <div class=\"input-group-append\">\r\n                <Button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={() => updateStock()}>Update</Button>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div class=\"input-group-append\">\r\n                <Button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={() => removeItem()}>Remove Item</Button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdjustableMenuItemCard;","import { Container, Button, Nav } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AdjustableMenuItemCard from \"../Cards/adjustableMenuItemCard\";\r\n\r\nfunction Manager(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [sizes, setSizes] = useState([]);\r\n  const [entrees, setEntrees] = useState([]);\r\n  const [sides, setSides] = useState([]);\r\n  const [appetizers, setAppetizers] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/menu/getAllMenuItems\")\r\n    .then((res) => {\r\n      sortItems(res.data);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {console.log(err)});\r\n\r\n  }, []);\r\n\r\n  const springProps = useSpring({\r\n    to: { opacity: 1 },\r\n    from: { opacity: 0 },\r\n    delay: 100,\r\n  });\r\n\r\n  function sortItems(menuData) {\r\n    const tempEntrees = [];\r\n    const tempSizes = [];\r\n    const tempSides = [];\r\n    const tempDrinks = [];\r\n    const tempApps = [];\r\n\r\n    menuData.forEach((item) => {\r\n      let tempCard = <AdjustableMenuItemCard key={item.item}\r\n                        name={item.item}\r\n                        cost={item.cost}\r\n                        amount={item.stock}\r\n                      />\r\n\r\n      if (item.item_type == \"entree\") {tempEntrees.push(tempCard);}\r\n      else if (item.item_type == \"size\") {tempSizes.push(tempCard);}\r\n      else if (item.item_type == \"side\") {tempSides.push(tempCard);}\r\n      else if (item.item_type == \"drink\") {tempDrinks.push(tempCard);}\r\n      else if (item.item_type == \"appetizer\") {tempApps.push(tempCard);}\r\n    })\r\n    \r\n    setEntrees(tempEntrees);\r\n    setDrinks(tempDrinks);\r\n    setSizes(tempSizes);\r\n    setSides(tempSides);\r\n    setAppetizers(tempApps);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Manager\">\r\n      {loading ? (\r\n        <React.Fragment>\r\n        <br></br>\r\n        <p className=\"text-center\"> loading... </p>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Container>\r\n                <h2 className=\"display-8 text-center\">\r\n                    <br></br>\r\n                    Manager View\r\n                </h2>\r\n          </Container>\r\n          <br></br>\r\n          <br></br>\r\n          <h4 className=\"text-center\">Sizes:</h4>\r\n          <div className=\"card-columns\">{sizes}</div>\r\n          <br></br>\r\n          <h4 className=\"text-center\">Sides:</h4>\r\n          <div className=\"card-columns\">{sides}</div>\r\n          <br></br>\r\n          <h4 className=\"text-center\">Entrees:</h4>\r\n          <div className=\"card-columns\">{entrees}</div>\r\n          <br></br>\r\n          <h4 className=\"text-center\">Appetizers:</h4>\r\n          <div className=\"card-columns\">{appetizers}</div>\r\n          <br></br>\r\n          <h4 className=\"text-center\">Drinks:</h4>\r\n          <div className=\"card-columns\">{drinks}</div>\r\n          <br></br><br></br>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nManager.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Manager);\r\n","import { Container, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction ReportItemCard(itemProps) {\r\n  return (\r\n    <Card style={{width: 90+\"%\", margin: 3+\"%\", color: \"#000000\"}}>\r\n        <Card.Body>\r\n            <Card.Title style={{}}>{itemProps.name}</Card.Title>\r\n            <Card.Text style={{margin: 0+\"%\"}}>{itemProps.detail}</Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ReportItemCard;","import { Card } from \"react-bootstrap\";\r\n\r\nfunction OrderReportCard(itemProps) {\r\n  let num = 0.25;\r\n\r\n  return (\r\n    <Card style={{width: 90+\"%\", margin: 3+\"%\", color: \"#000000\"}}>\r\n        <Card.Body>\r\n            <Card.Title style={{}}>{itemProps.title}</Card.Title>\r\n            <Card.Text style={{fontWeight: \"bold\", margin: num+\"%\"}}>Items: </Card.Text>\r\n            <Card.Text style={{margin: num+\"%\"}}>{itemProps.items}</Card.Text>\r\n            <Card.Text style={{fontWeight: \"bold\", margin: num+\"%\"}}>Total: </Card.Text>\r\n            <Card.Text style={{margin: num+\"%\"}}>{itemProps.total}</Card.Text>\r\n            <Card.Text style={{fontWeight: \"bold\", margin: num+\"%\"}}>Order Created By: {itemProps.soldBy}</Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default OrderReportCard;","import { Container, Button, Nav, CardGroup, Card, Spinner, Form, Table, Row, Col, Modal } from \"react-bootstrap\";\r\nimport { useSpring, animated, interpolate } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BagItemCard from \"../Cards/bagCard\";\r\n//import BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport ReportItemCard from \"../Cards/reportItemCard\";\r\nimport OrderReportCard from \"../Cards/orderReportCard\";\r\nimport e from \"cors\";\r\n\r\nfunction Reports(props){\r\n    const [isLoading, setLoading] = useState([]);\r\n    const [menuItems, setMenuItems] = useState([]);\r\n    const [startDate, setStartDate] = useState(\"2022-09-26\");\r\n    const [endDate, setEndDate] = useState(\"2022-09-27\");\r\n    const [reportToGenerate, setReportToGenerate] = useState(\"\");\r\n    const [reportItems, setReportItems] = useState([]);\r\n    const [sellsTogetherSearchItem, setSellsTogetherSearchItem] = useState(\"Bowl\");\r\n\r\n    // filters for sales report\r\n    const [employeeFilter, setEmployeeFilter] = useState(\"\");\r\n    const [itemsFilter, setItemsFilter] = useState(\"\");\r\n    const [orderNumberFitler, setOrderNumberFilter] = useState(\"\");\r\n    const [totalFilter, setTotalFilter] = useState(\"\");\r\n\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\"\r\n      });\r\n\r\n    const getRevenueReport = () => {\r\n        axios.get(\"/reports/getRevenue\", {\r\n            params: {\r\n                endDate: endDate,\r\n                startDate: startDate,\r\n            }\r\n        }).then((res) => {\r\n            let tempCard = <ReportItemCard  \r\n                            key={\"Revenue\"}\r\n                            name={\"Total Revenue\"}\r\n                            detail={formatter.format(res.data.revenue)}\r\n                            />;\r\n            setReportItems([tempCard]);\r\n        });\r\n    };\r\n\r\n    const passesFilters = (order) => {\r\n        let possibleIds = employeeFilter.split(\", \");\r\n        let possibleItems = itemsFilter.split(\", \");\r\n        let orderItems = order.items.split(\", \");\r\n        var minTotal = 0;\r\n        var maxTotal = Infinity;\r\n        var allItemsFound = false;\r\n\r\n        if (orderNumberFitler != \"\" && order.order_number != parseInt(orderNumberFitler)) {return false;}\r\n        if (employeeFilter != \"\" && !possibleIds.includes(order.employee_id.toString())) {return false;}\r\n\r\n        if (totalFilter.split(\", \").length == 2) {\r\n            minTotal = parseFloat(totalFilter.split(\", \")[0]);\r\n            maxTotal = parseFloat(totalFilter.split(\", \")[1]);\r\n        }\r\n        else if (totalFilter != \"\" && parseFloat(totalFilter) >= 0) {\r\n            minTotal = parseFloat(totalFilter);\r\n        }\r\n\r\n        if (!(minTotal <= order.total_price && order.total_price <= maxTotal)) {return false;}\r\n\r\n        if (itemsFilter != \"\") {\r\n            allItemsFound = possibleItems.every((filterItem) => {\r\n                var itemNotFound = orderItems.every((orderItem) => {\r\n                    if (orderItem == filterItem) {return false;}\r\n                    else {return true;}\r\n                });\r\n                \r\n                return !itemNotFound;\r\n            });\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        return allItemsFound;\r\n    }\r\n\r\n    const getSalesReport = () => {\r\n        axios.get(\"/reports/getSales\", {\r\n            params: {\r\n                endDate: endDate,\r\n                startDate: startDate,\r\n            }\r\n        }).then((res) => {\r\n            var tempReportItems = [];\r\n\r\n            res.data.every((order) => {\r\n                // check filter item\r\n                if (!passesFilters(order)) {return true;}\r\n                \r\n                var itemsWPrice = []\r\n                let priceArr = order.prices.split(\", \");\r\n                let arrLength = priceArr.length;\r\n\r\n                // create \"<item>: <price>, ...\" string for each order\r\n                order.items.split(\", \").forEach((item, i) => {\r\n                    if (i < arrLength - 1) {\r\n                        itemsWPrice.push(item + \": \" + formatter.format(priceArr[i]) + \", \");\r\n                    }\r\n                    else {\r\n                        itemsWPrice.push(item + \": \" + formatter.format(priceArr[i]));\r\n                    }\r\n                });\r\n\r\n                // create order card\r\n                let tempCard = <OrderReportCard  \r\n                                key={order.order_number}\r\n                                title={\"Order #\" + order.order_number}\r\n                                items={itemsWPrice}\r\n                                total={formatter.format(order.total_price)}\r\n                                soldBy={\"Employee #\" + order.employee_id}\r\n                                />;\r\n                tempReportItems.push(tempCard);\r\n                return true;\r\n        });\r\n            setReportItems([tempReportItems]);\r\n        });\r\n    };\r\n\r\n    const getRestockReport = () => {\r\n        axios.get(\"/reports/getRestock\", {\r\n            params: {\r\n                startDate: startDate,\r\n                endDate: endDate \r\n            }\r\n        })\r\n        .then((res) => {\r\n            let restockItems = res.data;\r\n            let tempReportItems = [];\r\n            restockItems.forEach((item) => {\r\n               let tempCard = <ReportItemCard  \r\n                                key={item.item}\r\n                                name={item.item}\r\n                                detail={(item.percentageSold * 100).toFixed(2) + \"% of stock sold\"}\r\n                                />;\r\n                tempReportItems.push(tempCard);\r\n            });\r\n            setReportItems(tempReportItems);\r\n        })\r\n        .catch((err) => {console.log(err);});\r\n    };\r\n\r\n    const getExcessReport = () => {\r\n        axios.get(\"/reports/getExcessReport\", {\r\n            params: {\r\n                startDate: startDate,\r\n                endDate: endDate\r\n            }\r\n        })\r\n        .then((res) => {\r\n            let excessItems = res.data;\r\n            let tempReportItems = [];\r\n            excessItems.forEach((item) => {\r\n               let tempCard = <ReportItemCard  \r\n                                key={item.item}\r\n                                name={item.item}\r\n                                detail={(item.percentageSold * 100).toFixed(2) + \"% of stock sold\"}\r\n                                />;\r\n                tempReportItems.push(tempCard);\r\n            });\r\n            setReportItems(tempReportItems);\r\n        })\r\n        .catch((err) => {console.log(err);});\r\n    };\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"/menu/getAllMenuItems\")\r\n        .then(res => {\r\n            setMenuItems(res.data);\r\n        });\r\n\r\n        setLoading(false);\r\n    }, [props.auth.user.id]);\r\n\r\n    const mapMenuItems = () => {\r\n        const menuList = []; \r\n        \r\n        menuItems.forEach((item) => {\r\n            let tempItem = <option>{item.item}</option>;\r\n            menuList.push(tempItem);\r\n        });\r\n        return menuList;\r\n    }\r\n\r\n    const getSellTogetherReport = () => {\r\n        axios.get(\"/reports/getSellTogether\", {\r\n            params: {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                searchItem: sellsTogetherSearchItem\r\n            }\r\n        })\r\n        .then((res) => {\r\n            let sellItems = res.data;\r\n            var itemString = \"\";\r\n            var itemList = [];\r\n            sellItems.forEach((item) => {\r\n                itemString = String(item.value) + \": \" + item.key;\r\n                let tempHTML = <p style={{margin: 0.25+\"%\"}}>{itemString}</p>;\r\n                itemList.push(tempHTML);\r\n            })\r\n            let tempReportItems = [];\r\n            let tempCard = <ReportItemCard  \r\n                            key={sellsTogetherSearchItem}\r\n                            name={sellsTogetherSearchItem}\r\n                            detail={itemList}\r\n                            />;\r\n            tempReportItems.push(tempCard);\r\n\r\n            setReportItems(tempReportItems);\r\n        })\r\n        .catch((err) => {console.log(err);});\r\n    }\r\n\r\n    const generateReport = () => {\r\n        if(reportToGenerate == \"Total Revenue\"){\r\n            getRevenueReport();\r\n        }\r\n        else if(reportToGenerate == \"Sales Report\"){\r\n            getSalesReport();\r\n        }\r\n        else if(reportToGenerate == \"Excess\"){\r\n            getExcessReport();\r\n        }\r\n        else if(reportToGenerate == \"Restock Report\"){\r\n            getRestockReport();\r\n        }\r\n        else if(reportToGenerate == \"Sell Together\"){\r\n            getSellTogetherReport();\r\n        }\r\n        else{\r\n            setReportItems([<h3 style={{margin: 10+\"%\"}}>No Report Selected</h3>]);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const ChangeReportToGenerate = (nextReport) => {\r\n        setReportItems([]);\r\n        setReportToGenerate(nextReport);\r\n        \r\n        if (nextReport != \"Sales Report\") {\r\n            setEmployeeFilter(\"\");\r\n            setItemsFilter(\"\");\r\n            setOrderNumberFilter(\"\");\r\n            setTotalFilter(\"\");\r\n        }\r\n    }\r\n\r\n      return (\r\n        <div className=\"Reports\">\r\n          {isLoading ? (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Spinner animation=\"border\" />\r\n            </div>\r\n          ) : (\r\n            <React.Fragment>\r\n                <br></br>\r\n                <h2 className=\"display-8 text-center\">Manager Reports</h2>\r\n                <br></br>\r\n                <form style={{width: 43+\"%\", float: \"left\"}}>\r\n                <div class=\"form-group row\">\r\n                    <label for=\"report\" class=\"col-sm-2 col-form-label\" align=\"right\">Start Date</label>\r\n                        <div class=\"col-sm-3\">\r\n                    <input type=\"date\" class=\"form-control\" id=\"startDate\" name=\"startDate\" min=\"2022-09-26\" \r\n                        onChange={(e) => {\r\n                        var minDate = e.target.value;\r\n                        document.getElementById('endDate').setAttribute(\"min\", minDate);\r\n                        setStartDate(minDate);\r\n                      }}></input>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <label for=\"report\" class=\"col-sm-2 col-form-label\" align=\"right\">End Date</label>\r\n                    <div class=\"col-sm-3\">\r\n                        <input type=\"date\" class=\"form-control\" id=\"endDate\" name=\"endDate\" min=\"2022-09-26\" \r\n                        onChange={(e) => {\r\n                        var maxDate = e.target.value;\r\n                        setEndDate(maxDate);\r\n                      }}></input>\r\n                    </div>\r\n                </div>\r\n                <fieldset class=\"form-group\">\r\n                    <div class=\"row\">\r\n                    <legend class=\"col-form-label col-sm-2 pt-0\" align=\"right\">Choose Report</legend>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gridReport\" id=\"report\" value=\"option1\" onClick={() => ChangeReportToGenerate(\"Total Revenue\")}></input>\r\n                            <label class=\"form-check-label\" for=\"gridRadios1\">Total Revenue</label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gridReport\" id=\"report\" value=\"option3\" onClick={() => ChangeReportToGenerate(\"Excess\")}></input>\r\n                            <label class=\"form-check-label\" for=\"gridRadios2\">Excess Report</label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gridReport\" id=\"report\" value=\"option3\" onClick={() => ChangeReportToGenerate(\"Restock Report\")}></input>\r\n                            <label class=\"form-check-label\" for=\"gridRadios2\">Restock Report</label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gridReport\" id=\"report\" value=\"option2\" onClick={() => ChangeReportToGenerate(\"Sales Report\")}></input>\r\n                            <label class=\"form-check-label\" for=\"gridRadios2\">Sales Report</label>\r\n                        </div>\r\n                        <div class=\"form-check check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"gridReport\" id=\"report\" value=\"option3\" onClick={() => ChangeReportToGenerate(\"Sell Together\")}></input>\r\n                            <label class=\"form-check-label\" for=\"gridRadios3\">Sells-Together Report</label>\r\n                            <Form.Group className=\"mb-2\">\r\n                            <Form.Select\r\n                                aria-label=\"SearchItem\"\r\n                                value={sellsTogetherSearchItem}\r\n                                width=\"300\"\r\n                                onChange={(e) => {\r\n                                setSellsTogetherSearchItem(e.target.value);\r\n                                }}\r\n                                style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                                >\r\n                                    {mapMenuItems()}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </fieldset>\r\n                <Button class=\"btn btn-primary\" style={{marginLeft: 18+\"%\"}} onClick={() => generateReport()}>Process</Button>\r\n            </form>\r\n            <div className=\"Report Generated\" style={{width: 55+\"%\", height: 70+\"vh\", float: \"right\"}}>\r\n                {(reportToGenerate == \"Sales Report\") ? (\r\n                    <React.Fragment>\r\n                    <div className=\"d-flex justify-content-center\" style={{}}>\r\n                        <input style={{width: 24+\"%\", margin: 0.75+\"%\"}} type=\"text\" placeholder={\"Items Filter\"} id=\"items\" onChange={(e) => setItemsFilter(e.target.value)}>\r\n                        </input>                        \r\n                        <input style={{width: 24+\"%\", margin: 0.75+\"%\"}} type=\"text\" placeholder={\"Total Filter\"} id=\"price\" onChange={(e) => setTotalFilter(e.target.value)}>\r\n                        </input>\r\n                        <input style={{width: 24+\"%\", margin: 0.75+\"%\"}} type=\"text\" placeholder={\"Employee ID Filter\"} id=\"employeeID\" onChange={(e) => setEmployeeFilter(e.target.value)}>\r\n                        </input>\r\n                        <input style={{width: 24+\"%\", margin: 0.75+\"%\"}} type=\"text\" placeholder={\"Order Number\"} id=\"OrderNumber\" onChange={(e) => setOrderNumberFilter(e.target.value)}>\r\n                        </input>\r\n                    </div>\r\n                    <Button class=\"btn btn-primary\" style={{marginLeft: 43.5+\"%\"}} onClick={() => generateReport()}>Filter Results</Button>\r\n                    <div style={{height: 65+\"vh\", marginTop: 1+\"%\", overflowY: \"scroll\"}}>\r\n                        {reportItems}\r\n                    </div>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <div style={{height: 70+\"vh\", overflowY: \"scroll\"}}>\r\n                    {reportItems}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n      }\r\n      </div>\r\n      );\r\n  \r\n  \r\n  }\r\n  \r\nReports.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(Reports);","import { Container, Button, Nav, CardGroup, Card, Spinner, Form, Table, Row, Col, Modal } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddMenuItem(props){\r\n    const [isLoading, setLoading] = useState([]);\r\n    \r\n    const [itemName, setItemName] = useState(\"Default\");\r\n    const [itemPrice, setItemPrice] = useState(0);\r\n    const [itemStock, setItemStock] = useState(0);\r\n    const [itemType, setItemType] = useState(\"Entree\");\r\n    \r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\"\r\n      });\r\n\r\n    const createItem = () => {\r\n        axios.post(\"/menu/createItem\", {\r\n            params: {\r\n                itemName: itemName,\r\n                itemPrice: itemPrice,\r\n                itemStock: itemStock,\r\n                itemType: itemType,\r\n            }\r\n        }).then((res) => {\r\n            window.location.reload();\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, [props.auth.user.id]);\r\n  \r\n    return (\r\n        <div className=\"Reports\">\r\n          {isLoading ? (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Spinner animation=\"border\" />\r\n            </div>\r\n          ) : (\r\n            <React.Fragment>\r\n                <br></br>\r\n                <h2 className=\"display-8 text-center\">Item Creator</h2>\r\n                <br></br>\r\n                <fieldset class=\"form-group\">\r\n                    <form style={{width: 50+\"%\", float: \"left\"}}>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"itemName\" class=\"col-sm-2 col-form-label\" align=\"right\">Item Name:</label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"itemName\" class=\"form-control\" id=\"itemName\" placeholder=\"Enter Item Name\"\r\n                                onChange={(e) => setItemName(e.target.value)}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"itemPrice\" class=\"col-sm-2 col-form-label\" align=\"right\">Price:</label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"itemPrice\" class=\"form-control\" id=\"itemPrice\" placeholder=\"Enter Item Price\"\r\n                                onChange={(e) => setItemPrice(e.target.value)}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"itemStock\" class=\"col-sm-2 col-form-label\" align=\"right\">Stock:</label>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"itemStock\" class=\"form-control\" id=\"itemStock\" placeholder=\"Enter Item Stock\"\r\n                                onChange={(e) => setItemStock(e.target.value)}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\" align=\"right\">Item Type:</label>\r\n                            <div class=\"col-sm-3\">\r\n                                <Form.Select\r\n                                aria-label=\"Item Type\"\r\n                                value={itemType}\r\n                                onChange={(e) => {\r\n                                setItemType(e.target.value);\r\n                                }}\r\n                                >\r\n                                    <option value=\"entree\">Entree</option>\r\n                                    <option value=\"appetizer\">Appetizer</option>\r\n                                    <option value=\"side\">Side</option>\r\n                                    <option value=\"drink\">Drink</option>\r\n                                    <option value=\"size\">Size</option>\r\n                                </Form.Select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-sm-3\" align=\"center\">\r\n                                <button type=\"submit\" class=\"btn btn-primary\" onClick={() => createItem()}>Create</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </fieldset>\r\n            </React.Fragment>\r\n        )\r\n      }\r\n      </div>\r\n      );\r\n  \r\n  \r\n  }\r\n  \r\nAddMenuItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(AddMenuItem);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateUserRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true && (auth.user.role === \"user\" || auth.user.role === \"cashier\" || auth.user.role === \"manager\") ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateUserRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateUserRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateManagerRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true && auth.user.role === \"manager\" ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateManagerRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateManagerRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateCashierRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true &&\r\n      (auth.user.role === \"manager\" || auth.user.role === \"cashier\") ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateCashierRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateCashierRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateUserRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateUserRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateUserRoute);\r\n","//Bootstrap\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/Login/login\";\r\nimport Register from \"./components/Login/register\";\r\nimport Landing from \"./components/Gen/landing\";\r\nimport NavBar from \"./components/Gen/NavBar\";\r\nimport UserMenu from \"./components/User/menu\";\r\nimport UserBag from \"./components/User/bag\";\r\nimport UserSettings from \"./components/User/settings\";\r\nimport Help from \"./components/User/help\";\r\nimport FindStore from \"./components/User/findStore\";\r\nimport ProcessOrders from \"./components/Cashier/processOrders\";\r\nimport AdjustMenu from \"./components/Manager/adjustMenu\";\r\nimport Reports from \"./components/Manager/reports\";\r\nimport AddMenuItem from \"./components/Manager/addMenuItem\";\r\n\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport PrivateUserRoute from \"./components/private-routes/PrivateUserRoute\";\r\nimport PrivateManagerRoute from \"./components/private-routes/PrivateManagerRoute\";\r\nimport PrivateCashierRoute from \"./components/private-routes/PrivateCashierRoute\";\r\nimport PrivateOnlineUserRoute from \"./components/private-routes/PrivateOnlineUserRoute\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/menu\" component={UserMenu} />\r\n              <Route exact path=\"/findStore\" component={FindStore} />\r\n              <PrivateOnlineUserRoute exact path=\"/settings\" component={UserSettings} />\r\n              <PrivateUserRoute exact path=\"/bag\" component={UserBag} />\r\n              <PrivateUserRoute exact path=\"/help\" component={Help} />\r\n              <PrivateCashierRoute exact path=\"/processOrders\" component={ProcessOrders} />\r\n              <PrivateManagerRoute exact path=\"/adjustMenu\" component={AdjustMenu} />\r\n              <PrivateManagerRoute exact path=\"/reports\" component={Reports} />\r\n              <PrivateManagerRoute exact path=\"/addMenuItem\" component={AddMenuItem} />\r\n              \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}